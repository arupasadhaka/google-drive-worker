spring:
  devtools:
    add-properties: 'true'
    livereload:
      port: '35730'
      enabled: 'true'
  jpa:
    database: mysql
    hibernate:
      ddl-auto: create
  application:
    name: Oslash GDrive Integration
  jmx:
    enabled: 'false'
  data:
    mongodb:
#      port: '27017'
#      host: 127.0.0.1
#      database: oslash
#      username: root
#      password: root
      uri: mongodb://root:root@localhost:27017/?authSource=admin&authMechanism=SCRAM-SHA-1
      database: oslash
  ## check and add
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
  datasource:
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    url: jdbc:mysql://localhost:3306/oslash?createDatabaseIfNotExist=true
  batch:
    jdbc:
      schema: classpath:org/springframework/batch/core/schema-mysql.sql
    job:
      enabled: false # disable on startup

app:
  files:
#    mime-type: application/vnd.google-apps.document
    mime-type: text/plain
  host:
    url: https://8d0a-27-116-40-142.in.ngrok.io
  sqs:
    que:
      request-name: file-meta-simple-request-que
      reply-name: file-meta-simple-reply-que
  batch:
    manager:
      partition-size: 100
    worker:
      download:
        meta:
          chunk-size: 20
        file:
          chunk-size: 20

  drive:
    mime-types: "application/octet-stream"
    changes:
      webhook: "/changes"
    watch:
      folder:
        name: oslash-test
    buffer-size: 100000000
aws:
  sqs:
    endpoint: http://localhost:4566
  region: us-east-1
  accessKey: ''
  secretKey: ''
  s3:
    endpoint: http://localhost:4566

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    com.oslash: DEBUG
    org.hibernate: INFO

google:
  app:
    secret:
      key:
        path: classpath:keys/client_secret.json
    access:
      type: offline
  credentials:
    folder:
      path: file:classpath:/credentials
  oauth:
    callback:
      uri: http://localhost/oauth


---

spring:
  config:
    activate:
      on-profile: manager
  batch:
    jdbc:
      initialize-schema: ALWAYS
server:
  port: '80'

---
spring:
  config:
    activate:
      on-profile: worker
  batch:
    jdbc:
      initialize-schema: NEVER
server:
  port: '8000'

---